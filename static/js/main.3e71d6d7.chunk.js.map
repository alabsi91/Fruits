{"version":3,"sources":["serviceWorker.js","detectPhone.js","AddedData.js","English.js","Arabic.js","index.js"],"names":["Boolean","window","location","hostname","match","detectPhone","navigator","userAgent","Added","AddedFruits","state","isPhone","detailRender","isAr","props","cal","gram","this","document","getElementById","id","className","name","onClick","x","findIndex","e","splice","updateHandle","length","style","display","margin","Component","ServingsList","value","dis","English","phone","grams","garmInput","servingInput","gramHandle","event","target","setState","max","servingHandle","calc","Number","toFixed","toString","calcKcal","percentProtein","Math","floor","protein","percentFat","fat","percentCarb","servingMap","arr","undefined","map","index","key","backgroundImage","img","merged","push","scrollTo","width","carb","fiber","sugar","type","min","onChange","defaultValue","serving","marginLeft","PhoneView","PcView","Arabic","marginRight","PhoneViewArabic","PcViewArabic","data","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","fruitAdded","mapAdded","sum","sumHandel","App","isReady","ready","fruitData","o","ar","reduce","total","num","Lang","mapData","innerHTML","selected","placeholder","direction","mapDataAR","changeHandle","sort","AlphaSorted","a","b","CalSorted","calMap","SugarSorted","SugarMap","CarbsSorted","CarbMap","FiberSorted","FiberMap","ProteinSort","ProteinMap","search","srchInput","y","flat","i","f","filter","toLowerCase","indexOf","concat","srch","bind","refFromURL","once","snapshot","val","el","autoComplete","disabled","AlphaSort","ReactDOM","render","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.3e71d6d7.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","function detectPhone() {\r\n  if (\r\n    navigator.userAgent.match(/Android/i) ||\r\n    navigator.userAgent.match(/webOS/i) ||\r\n    navigator.userAgent.match(/iPhone/i) ||\r\n    navigator.userAgent.match(/iPod/i) ||\r\n    navigator.userAgent.match(/BlackBerry/i) ||\r\n    navigator.userAgent.match(/Windows Phone/i) ||\r\n    navigator.userAgent.match(/Opera Mini/i) ||\r\n    navigator.userAgent.match(/IEMobile/i) ||\r\n    navigator.userAgent.match(/WPDesktop/i)\r\n  ) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default detectPhone;\r\n","import React, { Component } from 'react';\r\nimport updateHandle from './index'\r\nimport {isAr} from './index'\r\nimport detectPhone from './detectPhone';\r\n\r\nlet Added = []\r\n\r\nclass AddedFruits extends Component {\r\n\r\n    state = {isPhone: detectPhone()}\r\n\r\n    detailRender = () => {\r\n        if (isAr) {return this.props.cal + ' سعرة • ' + this.props.gram + 'غ '\r\n        } else {return this.props.cal + ' kcal •  ' + this.props.gram + ' g'}\r\n        \r\n    }\r\n    componentDidMount() {\r\n        if (this.state.isPhone) {document.getElementById('itemsContainerPc').id='itemsContainerPhone'}\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div id='itemsContainerPc'>\r\n                <p className='itemNamePc'>{this.props.name}</p>\r\n\r\n                <button \r\n                    id='deleteButtonPc'\r\n                    className='material-icons'\r\n                    onClick={() => {\r\n                                var x= Added.findIndex((e) => e.id === this.props.id);\r\n                                Added.splice(x, 1);\r\n                                updateHandle();\r\n                                if (Added.length === 0 && this.state.isPhone === false) {document.getElementById('sumPc').style.display = 'none';document.getElementById('cardsContainer').style.margin='0'}\r\n                                if (Added.length === 0 && this.state.isPhone) {document.getElementById('sumPhone').style.display='none'}\r\n                    }}>clear\r\n                </button>\r\n\r\n                <p id=\"itemDetailsPc\">{this.detailRender()}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AddedFruits;\r\nexport {Added}\r\n\r\n","import React, { Component, Fragment } from 'react';\r\nimport updateHandle from './index'\r\nimport { Added } from './AddedData';\r\nimport detectPhone from './detectPhone';\r\n\r\nfunction ServingsList(props){\r\n    return(\r\n        <Fragment>\r\n        <option value={props.value}>{props.dis}</option>\r\n        </Fragment>\r\n    )\r\n}\r\nclass English extends Component {\r\n\r\n    state = {phone: detectPhone(), grams: 100, garmInput: 1, servingInput: 100}\r\n        \r\n    gramHandle = (event) => {\r\n        if (event.target.value < 1) {this.setState({garmInput: ''})\r\n        } else if (event.target.value > 1000) {this.setState({garmInput: event.target.max})\r\n        } else {this.setState({garmInput: event.target.value, grams: this.state.servingInput * event.target.value})}\r\n    }\r\n    servingHandle = (event) => this.setState({servingInput: event.target.value, grams: event.target.value * this.state.garmInput})\r\n\r\n    calc = x => Number((((x * this.state.grams) / 100).toFixed(1)).toString());\r\n    calcKcal = x => Number(((x * this.state.grams) / 100).toFixed(0));\r\n    percentProtein = () => Math.floor((Number(this.props.protein) * 400)/Number(this.props.cal));\r\n    percentFat = () => Math.floor((Number(this.props.fat) * 900)/Number(this.props.cal));\r\n    percentCarb = () => (100 - (this.percentProtein() + this.percentFat()));\r\n    servingMap = (arr) => {if (arr !== undefined) {return arr.map((e,index) => <ServingsList key={index} dis={e.dis[0]} value={e.value} />)}}\r\n    \r\n    PhoneView() {\r\n        return(\r\n            <div className='cardPhone' style={{backgroundImage: this.props.img }}>\r\n\r\n                <button \r\n                    id='addButtonPc'\r\n                    className='material-icons'\r\n                    onClick={() => {\r\n                                let merged = {...this.props, ...{gram: this.state.grams}};\r\n                                Added.push(merged)\r\n                                updateHandle();\r\n                                document.getElementById('sumPhone').style.display='inline-flex';\r\n                                window.scrollTo(0,0)\r\n                            }}>add\r\n                </button>\r\n\r\n                <div className=\"kcalDetailsPhoneEn\">\r\n                    <div className='percentNumsPhone'>\r\n                        <b className='b1'>{this.percentCarb()}%</b>\r\n                        <b className='b2'>{this.percentProtein()}%</b>\r\n                        <b className='b3'>{this.percentFat()}%</b><br />\r\n                     </div>\r\n                    <div id='bars'> \r\n                        <div id='barContainer'>\r\n                            <div id='carbBar' style={{width: (this.percentCarb()*0.75)}}></div>\r\n                            <b>CARBS</b>\r\n                        </div>\r\n                        <div id='barContainer'>\r\n                            <div id='proteinBar' style={{width: (this.percentProtein()*0.75)}}></div>\r\n                            <b>PROTEIN</b>\r\n                        </div>\r\n                        <div id='barContainer'>\r\n                            <div id='fatBar' style={{width: (this.percentFat()*0.75)}}></div>\r\n                            <b>FAT</b>\r\n                        </div>\r\n                    </div>\r\n                    <h3>\r\n                    Fat: <p>{this.calc(this.props.fat)} g</p>\r\n                    <br />Carbohydrate: <p>{this.calc(this.props.carb)} g</p>\r\n                    <br />Dietary fiber: <p>{this.calc(this.props.fiber)} g</p>\r\n                    <br />Sugar: <p>{this.calc(this.props.sugar)} g</p>\r\n                    <br />Protein: <p>{this.calc(this.props.protein)} g</p>\r\n                    </h3>\r\n                </div>\r\n\r\n                <div className='titlePhoneEn'>\r\n                    <h2>{this.props.name}</h2>\r\n                    <h5>Calories: {this.calcKcal(this.props.cal)} kcal</h5>\r\n                    <h6>Per {Number(((this.state.grams).toFixed(1)).toString())} gram</h6>\r\n                    <input id=\"gram\" type=\"number\" min='1' max='1000' onChange={this.gramHandle} value={this.state.garmInput} />\r\n                    <select id='servingPcEn' defaultValue={'100'} onChange={this.servingHandle}>\r\n                        <option value=\"1\">gram</option>\r\n                        <option value=\"100\">standart serving (100 g)</option>\r\n                        {this.servingMap(this.props.serving)}\r\n                    </select>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    PcView() {\r\n        return( \r\n            <div className='cardPc' style={{backgroundImage: this.props.img }}>\r\n\r\n                <button \r\n                    id='addButtonPc'\r\n                    className='material-icons'\r\n                    onClick={() => {\r\n                                let merged = {...this.props, ...{gram: this.state.grams}};\r\n                                Added.push(merged);\r\n                                updateHandle();\r\n                                if (Added.length !== 0) {document.getElementById('cardsContainer').style.marginLeft='200px'}\r\n                                document.getElementById('sumPc').style.display = 'inline-flex'\r\n                            }}>add\r\n                </button>\r\n                \r\n                <div className=\"kcalDetailsPcEn\">\r\n                    <div className='percentNumsPc'>\r\n                        <b className='b1'>{this.percentCarb()}%</b>\r\n                        <b className='b2'>{this.percentProtein()}%</b>\r\n                        <b className='b3'>{this.percentFat()}%</b><br />\r\n                     </div>\r\n                    <div id='bars'>\r\n                        <div id='barContainer'>\r\n                            <div id='carbBar' style={{width: (this.percentCarb()*0.75)}}></div>\r\n                            <b>CARBS</b>\r\n                        </div>\r\n                        <div id='barContainer'>\r\n                            <div id='proteinBar' style={{width: (this.percentProtein()*0.75)}}></div>\r\n                            <b>PROTEIN</b>\r\n                        </div>\r\n                        <div id='barContainer'>\r\n                            <div id='fatBar' style={{width: (this.percentFat()*0.75)}}></div>\r\n                            <b>FAT</b>\r\n                        </div>\r\n                    </div>\r\n                    <h3>\r\n                    Fat: <p>{this.calc(this.props.fat)} g</p>\r\n                    <br></br>Carbohydrate: <p>{this.calc(this.props.carb)} g</p>\r\n                    <br></br>Dietary fiber: <p>{this.calc(this.props.fiber)} g</p>\r\n                    <br></br>Sugar: <p>{this.calc(this.props.sugar)} g</p>\r\n                    <br></br>Protein: <p>{this.calc(this.props.protein)} g</p>\r\n                    </h3>\r\n                </div>\r\n\r\n                <div className='titlePcEn'>\r\n                    <h4>{this.props.name}</h4>\r\n                    <h5>Calories: {this.calcKcal(this.props.cal)} kcal</h5>\r\n                    <h6>Per {Number(((this.state.grams).toFixed(1)).toString())} gram</h6>\r\n                    \r\n                    <input id=\"gram\" type=\"number\" min='1' max='1000' onChange={this.gramHandle} value={this.state.garmInput} />\r\n                    <select id='servingPcEn' defaultValue={'100'} onChange={this.servingHandle}>\r\n                        <option value=\"1\">gram</option>\r\n                        <option value=\"100\">standart serving (100 g)</option>\r\n                        {this.servingMap(this.props.serving)}\r\n                    </select>\r\n                \r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {      \r\n        if(this.state.phone) {return this.PhoneView()} else {return this.PcView()}\r\n    }\r\n}\r\n\r\nexport default English\r\nexport {ServingsList}","import React, { Component } from 'react';\r\nimport updateHandle from './index'\r\nimport {Added} from './AddedData'\r\nimport detectPhone from './detectPhone';\r\nimport {ServingsList} from './English'\r\n\r\nclass Arabic extends Component {\r\n\r\n    state = {phone: detectPhone(), grams: 100, garmInput: 1, servingInput: 100}\r\n\r\n    gramHandle = (event) => {\r\n        if (event.target.value < 1) {this.setState({garmInput: ''})\r\n        } else if (event.target.value > 1000) {this.setState({garmInput: event.target.max})\r\n        } else {this.setState({garmInput: event.target.value, grams: this.state.servingInput * event.target.value})}\r\n    }\r\n    servingHandle = (event) => this.setState({servingInput: event.target.value, grams: event.target.value * this.state.garmInput})\r\n\r\n    calc = x => Number((((x * this.state.grams) / 100).toFixed(1)).toString());\r\n    calcKcal = x => Number(((x * this.state.grams) / 100).toFixed(0));\r\n    percentProtein = () => Math.floor((Number(this.props.protein) * 400)/Number(this.props.cal));\r\n    percentFat = () => Math.floor((Number(this.props.fat) * 900)/Number(this.props.cal));\r\n    percentCarb = () => (100 - (this.percentProtein() + this.percentFat()));\r\n    servingMap = (arr) => {if (arr !== undefined) {return arr.map((e,index) => <ServingsList key={index} dis={e.dis[1]} value={e.value} />)}}\r\n\r\n    PhoneViewArabic() {\r\n        return(\r\n            <div className='cardPhone' style={{backgroundImage: this.props.img }}>\r\n\r\n                <button \r\n                    id='addButtonPc'\r\n                    className='material-icons'\r\n                    onClick={() => {\r\n                                let merged = {...this.props, ...{gram: this.state.grams}};\r\n                                Added.push(merged);\r\n                                updateHandle();\r\n                                document.getElementById('sumPhone').style.display='inline-flex';\r\n                                window.scrollTo(0,0)\r\n                            }}>add\r\n                </button>\r\n\r\n                <div className=\"kcalDetailsPhoneAr\">\r\n                    <div className='percentNumsPhoneArabic'>\r\n                        <b className='b1'>{this.percentCarb()}%</b>\r\n                        <b className='b2'>{this.percentProtein()}%</b>\r\n                        <b className='b3'>{this.percentFat()}%</b><br />\r\n                     </div>\r\n                    <div id='bars'>\r\n                        <div id='barContainer'>\r\n                            <div id='carbBar' style={{width: (this.percentCarb()*0.75)}}></div>\r\n                            <b>سكريات</b>\r\n                        </div>\r\n                        <div id='barContainer'>\r\n                            <div id='proteinBar' style={{width: (this.percentProtein()*0.75)}}></div>\r\n                            <b>بروتين</b>\r\n                        </div>\r\n                        <div id='barContainer'>\r\n                            <div id='fatBar' style={{width: (this.percentFat()*0.75)}}></div>\r\n                            <b>دهون</b>\r\n                        </div>\r\n                    </div>\r\n                    <h3>\r\n                    <p>{this.calc(this.props.fat)} غ</p> دهون:\r\n                    <br></br>سكريات:<p>{this.calc(this.props.carb)} غ</p>\r\n                    <br></br>ألياف:<p>{this.calc(this.props.fiber)} غ</p>\r\n                    <br></br>سكر:<p>{this.calc(this.props.sugar)} غ</p>\r\n                    <br></br>بروتين:<p>{this.calc(this.props.protein)} غ</p>\r\n                    </h3>\r\n                </div>\r\n\r\n                <div className='titlePhoneAr'>\r\n                    <h2>{this.props.name}</h2>\r\n                    <h5>{this.calcKcal(this.props.cal)} سعرة حرارية</h5>\r\n                    <h6>كل {Number(((this.state.grams).toFixed(1)).toString())} غرام</h6>\r\n                    <input id=\"gram\" style={{marginRight: 0 , marginLeft: '5px'}} type=\"number\" min='1' max='1000' onChange={this.gramHandle} value={this.state.garmInput} />\r\n                    <select id='servingPcEn' defaultValue={'100'} onChange={this.servingHandle}>\r\n                        <option value=\"1\">غرام</option>\r\n                        <option value=\"100\">حصة قياسية (100 غ)</option>                        \r\n                        {this.servingMap(this.props.serving)}\r\n                    </select>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    PcViewArabic() {\r\n        return(\r\n            <div className='cardPc' style={{backgroundImage: this.props.img }}>\r\n\r\n                <button \r\n                    id='addButtonPc'\r\n                    className='material-icons'\r\n                    onClick={() => {\r\n                                let merged = {...this.props, ...{gram: this.state.grams}};\r\n                                Added.push(merged);\r\n                                updateHandle();\r\n                                if (Added.length !== 0) {document.getElementById('cardsContainer').style.marginLeft='200px'}\r\n                                document.getElementById('sumPc').style.display = 'inline-flex'\r\n                                }}>add\r\n                </button>\r\n                \r\n                <div className=\"kcalDetailsPcAr\">\r\n                    <div className='percentNumsPc'>\r\n                        <b className='b1'>{this.percentCarb()}%</b>\r\n                        <b className='b2'>{this.percentProtein()}%</b>\r\n                        <b className='b3'>{this.percentFat()}%</b><br />\r\n                     </div>\r\n                    <div id='bars'>\r\n                        <div id='barContainer'>\r\n                            <div id='carbBar' style={{width: (this.percentCarb()*0.75)}}></div>\r\n                            <b>سكريات</b>\r\n                        </div>\r\n                        <div id='barContainer'>\r\n                            <div id='proteinBar' style={{width: (this.percentProtein()*0.75)}}></div>\r\n                            <b>بروتين</b>\r\n                        </div>\r\n                        <div id='barContainer'>\r\n                            <div id='fatBar' style={{width: (this.percentFat()*0.75)}}></div>\r\n                            <b>دهون</b>\r\n                        </div>\r\n                    </div>\r\n                    <h3>\r\n                    دهون:<p>{this.calc(this.props.fat)} غ</p> \r\n                    <br></br>سكريات:<p>{this.calc(this.props.carb)} غ</p>\r\n                    <br></br>ألياف:<p>{this.calc(this.props.fiber)} غ</p>\r\n                    <br></br>سكر:<p>{this.calc(this.props.sugar)} غ</p>\r\n                    <br></br>بروتين:<p>{this.calc(this.props.protein)} غ</p>\r\n                    </h3>\r\n                </div>\r\n\r\n                <div className='titlePcAr'>\r\n                    <h4>{this.props.name}</h4>\r\n                    <h5>{this.calcKcal(this.props.cal)} سعرة حرارية</h5>\r\n                    <h6>كل {Number(((this.state.grams).toFixed(1)).toString())} غرام</h6>\r\n                    \r\n                    <input id=\"gram\" style={{marginRight: 0 , marginLeft: '5px'}} type=\"number\" min='1' max='1000' onChange={this.gramHandle} value={this.state.garmInput} />\r\n                    <select id='servingPcEn' defaultValue={'100'} onChange={this.servingHandle}>\r\n                        <option value=\"1\">غرام</option>\r\n                        <option value=\"100\">حصة قياسية (100 غ)</option>                        \r\n                        {this.servingMap(this.props.serving)}\r\n                    </select>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {        \r\n        if(this.state.phone) {return this.PhoneViewArabic()} else {return this.PcViewArabic()}\r\n    }\r\n}\r\n\r\nexport default Arabic","import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\nimport English from './English'\nimport Arabic from './Arabic'\nimport {Added} from './AddedData'\nimport AddedFruits from './AddedData'\nimport detectPhone from './detectPhone'\n//import data from './data.json'\n\nimport * as firebase from \"firebase/app\";\nimport \"firebase/analytics\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/database\";\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAgZxw_Wz_Wzdic0YAP20BPA9KMU6QlRtE\",\n    authDomain: \"fruitsindex.firebaseapp.com\",\n    databaseURL: \"https://fruitsindex.firebaseio.com\",\n    projectId: \"fruitsindex\",\n    storageBucket: \"fruitsindex.appspot.com\",\n    messagingSenderId: \"849400942163\",\n    appId: \"1:849400942163:web:fd8767e79f4f56099440a6\",\n    measurementId: \"G-ZRV5X48M3Q\"\n  };\nfirebase.initializeApp(firebaseConfig);\nlet data;\n\nlet isAr = false\nvar updateHandle = function () {this.setState({fruitAdded: this.mapAdded(Added)}); this.setState({sum: this.sumHandel()})}\n    \nclass App extends Component {\n\n    constructor() {\n        super()\n        this.state = {ar:false, isPhone: detectPhone(), fruitData:\"\", fruitAdded:'', sum: '', ready: false}\n        updateHandle=updateHandle.bind(this)\n    }\n  \n    componentDidMount() {\n        if (this.state.isPhone) {\n            document.getElementById('diaryContainerPc').id= 'DiaryContainerPhone';\n            document.getElementById('sumPc').id= 'sumPhone';\n        };      \n        firebase.database().refFromURL('https://fruitsindex.firebaseio.com/').once(\"value\", snapshot => {\n            data = snapshot.val();\n            this.setState({fruitData: this.mapData(data), ready:true})\n        })\n    }\n\n    isReady = () => {\n        if (!this.state.ready) {\n            return <h1>loading...</h1>\n        } else {\n            return this.state.fruitData\n        }\n    }\n    mapData(arr) {\n        return arr.map((el, index) => <English key={index} id={el.id} img={el.img} name={el.name[0]} cal={el.cal} fat={el.fat} carb={el.carb} fiber={el.fiber} sugar={el.sugar} protein={el.protein} serving={el.serving} />);\n    }\n    mapDataAR(arr) {\n        return arr.map((el, index) => <Arabic key={index} id={el.id} img={el.img} name={el.name[1]} cal={el.cal} fat={el.fat} carb={el.carb} fiber={el.fiber} sugar={el.sugar} protein={el.protein} serving={el.serving} />);\n    }\n\n    mapAdded(arr) {return arr.map((el, index) => <AddedFruits key={index} id={el.id} gram={el.gram} name={el.name} cal={((el.cal * el.gram) / 100).toFixed(0)} fat={el.fat} carb={el.carb} fiber={el.fiber} sugar={el.sugar} protein={el.protein} /> )}\n\n    sumHandel =  () => {\n        let x = Added.map(o => Number(((o.cal * o.gram) / 100).toFixed(0)));\n        if (Added.length === 0) { // Do nothing\n        } else if (this.state.ar) {x = x.reduce((total, num) => total + num); return 'المجموع ' + x + ' سعرة'\n        } else {x = x.reduce((total, num) => total + num); return 'Total ' + x + ' kcal'}   \n    }\n\n    Lang = () => {\n        if (this.state.ar){\n            isAr = false;\n            Added.splice(0, Added.length);\n            this.setState({fruitData: this.mapData(data), ar: false, fruitAdded:'', sum: ''});\n            if (this.state.isPhone) {document.getElementById('sumPhone').style.display='none'} else {document.getElementById('sumPc').style.display = 'none';}\n            document.getElementById('cardsContainer').style.marginLeft='0px'\n            document.getElementById('lang').innerHTML='العربية'\n            document.getElementById('searchInput').value = \"\"\n            document.getElementById('choose').innerHTML='Sort By'\n            document.getElementById('choose').selected='defaultvalue'\n            document.getElementById('AlphaSort').innerHTML='Alphabetical'\n            document.getElementById('CalSort').innerHTML='Kcal'\n            document.getElementById('SugarSort').innerHTML='Sugar'\n            document.getElementById('CarbsSort').innerHTML='Carbs'\n            document.getElementById('FiberSort').innerHTML='Fiber'\n            document.getElementById('ProteinSort').innerHTML='Protein'\n            document.getElementById(\"searchInput\").placeholder = 'Search'\n            document.getElementById('root').style.direction='ltr'\n        } else {\n            isAr = true;\n            Added.splice(0, Added.length);\n            this.setState({fruitData: this.mapDataAR(data), ar: true, fruitAdded:'', sum: ''});\n            if (this.state.isPhone) {document.getElementById('sumPhone').style.display='none'} else {document.getElementById('sumPc').style.display = 'none';}\n            document.getElementById('cardsContainer').style.marginLeft='0px'\n            document.getElementById('lang').innerHTML='English'\n            document.getElementById('searchInput').value = \"\";\n            document.getElementById('choose').selected= 'defaultvalue'\n            document.getElementById('choose').innerHTML='ترتيب حسب'\n            document.getElementById('AlphaSort').innerHTML='الأبجدية'\n            document.getElementById('CalSort').innerHTML='الطاقة'\n            document.getElementById('SugarSort').innerHTML='السكر'\n            document.getElementById('CarbsSort').innerHTML='السكريات'\n            document.getElementById('FiberSort').innerHTML='الألياف'\n            document.getElementById('ProteinSort').innerHTML='البروتين'\n            document.getElementById(\"searchInput\").placeholder = 'بحث'\n            document.getElementById('root').style.direction='rtl'\n        }\n    }\n\n    changeHandle = () => {\n        let sort = document.getElementById(\"sort\").value;\n        if (sort === \"AlphaSort\") {\n            if (this.state.ar) {let AlphaSorted = data.sort((a, b) => (a.name[1] > b.name[1]) ? 1 : -1); this.setState({fruitData: this.mapDataAR(AlphaSorted)})\n            } else {let AlphaSorted = data.sort((a, b) => (a.name[0] > b.name[0]) ? 1 : -1); this.setState({fruitData: this.mapData(AlphaSorted)})}\n        } else if (sort === \"CalSort\") {\n            let CalSorted = data.sort((a, b) => (a.cal < b.cal) ? 1 : -1);\n            let calMap = this.state.ar? this.mapDataAR(CalSorted): this.mapData(CalSorted);\n            this.setState({fruitData: calMap});\n        } else if (sort === \"SugarSort\") {\n            let SugarSorted = data.sort((a, b) => (a.sugar < b.sugar) ? 1 : -1);\n            let SugarMap = this.state.ar? this.mapDataAR(SugarSorted): this.mapData(SugarSorted);\n            this.setState({fruitData: SugarMap});\n        } else if (sort === \"CarbsSort\") {\n            let CarbsSorted = data.sort((a, b) => (a.carb < b.carb) ? 1 : -1);\n            let CarbMap = this.state.ar? this.mapDataAR(CarbsSorted): this.mapData(CarbsSorted);\n            this.setState({fruitData: CarbMap});\n        } else if (sort === \"FiberSort\") {\n            let FiberSorted = data.sort((a, b) => (a.fiber < b.fiber) ? 1 : -1);\n            let FiberMap = this.state.ar? this.mapDataAR(FiberSorted): this.mapData(FiberSorted);\n            this.setState({fruitData: FiberMap})\n        } else if (sort === \"ProteinSort\") {\n            let ProteinSort = data.sort((a, b) => (a.protein < b.protein) ? 1 : -1);\n            let ProteinMap = this.state.ar? this.mapDataAR(ProteinSort): this.mapData(ProteinSort);\n            this.setState({fruitData: ProteinMap})\n        }\n    }\n    \n    search = (event) => {\n        let srchInput = event.target.value\n        if (srchInput.length > 1) {\n            let y = [], flat = []\n            let max = data.map(e => e.name.length).reduce((a,b) => Math.max(a,b))\n            for (let i=0; i < max; i++){\n                let f = data.filter(o => o.name[i])\n                if (f.length !== 0) {y.push(f.filter(o => o.name[i].toLowerCase().indexOf(srchInput.toLowerCase()) !== -1))}\n            }\n            flat = flat.concat(...y)\n            let srch = this.state.ar? this.mapDataAR(flat): this.mapData(flat);\n            this.setState({fruitData: srch});\n        } else {let srch = this.state.ar? this.mapDataAR(data): this.mapData(data); this.setState({fruitData: srch})}\n    }\n\n    render() {\n        return (\n            <div>\n                <header id='navbar' className='srchConrainer'>\n                    <input id='searchInput' type='text' placeholder=\"search\" onChange={this.search} autoComplete=\"nope\"></input><br />\n                    <select id=\"sort\" defaultValue={'DEFAULT'} onChange={this.changeHandle}>\n                    <option id=\"choose\" value=\"DEFAULT\" disabled>Sort By</option>\n                    <option id=\"AlphaSort\" value=\"AlphaSort\" onClick={this.AlphaSort}>Alphabetical</option>\n                    <option id=\"CalSort\" value=\"CalSort\">Kcal</option>\n                    <option id=\"SugarSort\" value=\"SugarSort\">Sugar</option>\n                    <option id=\"CarbsSort\" value=\"CarbsSort\">Carbs</option>\n                    <option id=\"FiberSort\" value=\"FiberSort\">Fiber</option>\n                    <option id=\"ProteinSort\" value=\"ProteinSort\">Protein</option>\n                    </select>\n                    <button id='lang' onClick={this.Lang}>العربية</button>\n                </header>\n\n                <div id='diaryContainerPc'>\n                    {this.state.fruitAdded} <br />\n                    <div id='sumPc'>\n                        <p>{this.state.sum}</p>\n                    </div>\n                </div>\n\n                <div id='cardsContainer'>\n                    {this.isReady()}\n                </div>\n\n            </div>\n        )\n    }\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\nserviceWorker.unregister();\n\nexport default updateHandle\nexport {isAr}"],"sourceRoot":""}